(async function () {
  const waitForImages = (selector, expectedCount) => {
    console.log("Waiting for images to load...");
    return new Promise((resolve) => {
      const intervalId = setInterval(() => {
        const images = [...document.querySelectorAll(selector)];
        if (images.length === expectedCount && images.every(image => image.src && image.complete)) {
          clearInterval(intervalId);
          resolve(images);
        }
      }, 500);
    })
  }

  const scrollContainerSelector = "#jmuse-scroller-component";
  const pageSelector = `${scrollContainerSelector}>.F16e6`;
  const imageSelector = `${pageSelector}>img`;

  const scrollContainer = document.querySelector(scrollContainerSelector);
  const allElements = document.querySelectorAll(scrollContainerSelector + ">*");
  const pages = document.querySelectorAll(pageSelector);

  const SCROLL_HEIGHT_PX = 10000;
  const VIEWPORT_HEIGHT_PX = 9999;
  for (const el of allElements) {
    el.style.display = "none"; // Hide all elements
  }
  scrollContainer.insertAdjacentHTML("beforeend", `<div style="height:${SCROLL_HEIGHT_PX}px"></div>`);
  scrollContainer.style.height = VIEWPORT_HEIGHT_PX + "px";
  scrollContainer.scrollTo(0, 0);
  scrollContainer.scrollTo(0, 1);

  const loadedImages = await waitForImages(imageSelector, pages.length);

  document.getElementsByTagName("html")[0].innerHTML = "";
  const style = document.createElement("style");
  style.textContent = `
    body{
      margin:0;
    }
    img{
      height:296mm; /* Adjusting height to prevent overflow */
    }
    @page {
      size: A4;
      margin: 0;
    }
    @media print {
      html, body {
        width: 210mm;
        height: 297mm;
      }
    }
  `;
  document.head.appendChild(style);

  for (const image of loadedImages) {
    const imageClone = document.createElement("img");
    imageClone.src = image.src;
    document.body.appendChild(imageClone);
  }

  waitForImages("img", pages.length).then(() => window.print());

})();
